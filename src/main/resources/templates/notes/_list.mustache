<div id="notes-list">
  {{#noteDtos}}
    <div class="card m-2" id="notes-{{id}}">
      <div class="card-header">
        {{title}}
        <!-- 모달 트리거 버튼 -->
        <button type="button"
                class="btn btn-sm btn-outline-primary"
                data-bs-toggle="modal"
                data-bs-target="#note-edit-modal"
                data-bs-id="{{id}}"
                data-bs-title="{{title}}"
                data-bs-member-id="{{memberId}}">수정</button>
        <!-- 단어장 삭제 버튼 -->
        <button type="button"
                class="btn btn-sm btn-outline-danger note-delete-btn"
                data-note-id="{{id}}">삭제</button>
      </div>
    </div>
  {{/noteDtos}}
</div>


<!-- Modal -->
<div class="modal fade" id="note-edit-modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">단어장 수정</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- 단어장 수정 폼-->
        <form>
          <!-- 제목 입력-->
          <div class="mb-3">
            <label class="form-label">제목</label>
            <input class="form-control form-control-sm" id="edit-note-title">
          </div>

          <!-- 히든 인풋 -->
          {{#member}}
            <input type="hidden" id="edit-note-id">
            <input type="hidden" id="edit-note-member-id">
          {{/member}}

          <!--전송 버튼 -->
          <button type="button" class="btn btn-outline-primary btn-sm" id="note-update-btn">수정 완료</button>
        </form>
      </div>
    </div>
  </div>
</div>
</div>

<!-- 모달 이벤트 처리 -->
<script>
{
  // 모달 요소 선택
  const noteEditModal = document.querySelector("#note-edit-modal");

  // 모달 이벤트 감지
  noteEditModal.addEventListener("show.bs.modal", function(event) {
    // 트리거 버튼 선택
    const triggerBtn = event.relatedTarget;

    // 데이터 가져오기
    const id = triggerBtn.getAttribute("data-bs-id");
    const title = triggerBtn.getAttribute("data-bs-title");
    const memberId = triggerBtn.getAttribute("data-bs-member-id");

    // 데이터를 반영
    document.querySelector("#edit-note-title").value = title;
    document.querySelector("#edit-note-id").value = id;
    document.querySelector("#edit-note-member-id").value = memberId;

  });
}

{
  // 수정 완료 버튼
  const noteUpdateBtn = document.querySelector("#note-update-btn");

  // 클릭 이벤트 감지 및 처리
  noteUpdateBtn.addEventListener("click", function() {
    // 수정 단어장 객체 생성
    const note = {
      id: document.querySelector("#edit-note-id").value,
      title: document.querySelector("#edit-note-title").value,
      member_id: document.querySelector("#edit-note-member-id").value
    };

    console.log(note);

    // 수정 REST API 호출 - fetch()
    const url = "/api/notes/" + comment.id;
    fetch(url, {
      method: "PATCH",                  // PATCH 요청
      body: JSON.stringify(note),       // 수정된 단어장 객체를 JSON으로 전달
      headers: {
        "Content-Type": "application/json"
      }
    }).then(response => {
      // http 응답 코드에 따른 메시지 출력
      const msg = (response.ok) ? "단어장이 수정 되었습니다." : "단어장 수정 실패..!";
      alert(msg);
      // 현재 페이지를 새로고침
      window.location.reload();
    });
  });
}
</script>

<!-- 단어장 삭제 -->
<script>
{
  // 삭제 버튼 선택
  const noteDeleteBtns = document.querySelectorAll(".note-delete-btn");

  // 삭제 버튼 이벤트를 처리
  noteDeleteBtns.forEach(btn => {
    // 각 버튼의 이벤트 처리를 등록
    btn.addEventListener("click", (event) => {
      // 이벤트 발생 요소를 선택
      const noteDeleteBtn = event.srcElement;

      // 삭제 댓글 id 가져오기
      const noteId = noteDeleteBtn.getAttribute("data-note-id");
      console.log(`삭제 버튼 클릭: ${noteId}번 단어장`); // "삭제 버튼 클릭: " + noteId + "번 단어장";

      // 삭제 API 호출 및 처리
      const url = `/api/notes/${noteId}`; // 백틱 숫자 1번 왼쪽키 사용하면 주석 코드 안에서 다른 값 사용가능
      fetch(url, {
        method: "DELETE"
      }).then(response => {
        // 단어장 삭제 실패 처리
        if (!response.ok) {
          alert("단어장 삭제 실패..!");
          return;
        }

        // 삭제 성공 시, 댓글을 화면에서 지움!
        const target = document.querySelector(`#notes-${noteId}`);
        target.remove();
      });
    });
  });
}
</script>